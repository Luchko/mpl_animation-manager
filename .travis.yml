language: python

env:
  global:
    - MINICONDA_VERSION="latest"
    - MINICONDA_LINUX="Linux-x86_64"
    - MINICONDA_OSX="MacOSX-x86_64"

matrix:
  include:
    # Linux using pip packages
    - python: "3.5"
      env: USE_QT_API=PyQt5 USE_CONDA=false
      os: linux
    # Linux using conda packages
    - python: "2.7"
      env: USE_QT_API=PyQt4 USE_CONDA=true
      os: linux
    - python: "2.7"
      env: USE_QT_API=PyQt5 USE_CONDA=true
      os: linux
    - python: "3.6"
      env: USE_QT_API=PyQt4 USE_CONDA=true
      os: linux
    - python: "3.6"
      env: USE_QT_API=PyQt5 USE_CONDA=true
      os: linux
  
before_install:
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"

install:
  - sudo apt-get update;
  # Define the value to download
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      MINICONDA_OS=$MINICONDA_LINUX;
    elif [ "$TRAVIS_OS_NAME" = "osx" ]; then
      MINICONDA_OS=$MINICONDA_OSX;
    fi

  # You may want to periodically update this, although the conda update
  # conda line below will keep everything up-to-date.  We do this
  # conditionally because it saves us some downloading if the version is
  # the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" = "2.7" ]]; then
      wget "http://repo.continuum.io/miniconda/Miniconda2-$MINICONDA_VERSION-$MINICONDA_OS.sh" -O miniconda.sh;
    else
      wget "http://repo.continuum.io/miniconda/Miniconda3-$MINICONDA_VERSION-$MINICONDA_OS.sh" -O miniconda.sh;
    fi
    
  - bash miniconda.sh -b -p $HOME/miniconda;
  - export PATH="$HOME/miniconda/bin:$PATH";
  - hash -r;
  - conda config --set always_yes yes --set changeps1 no;
  - conda update -q conda;
  # Useful for debugging any issues with conda
  - conda info -a;
  # setup evironment
  - if [[ "$USE_CONDA" = "true" ]]; then
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION;
      source activate test-environment;                
      conda install pyqt;
      python setup.py install;
    else
  	  conda install pyqt;   
	  python setup.py install;
    fi

  - pip install coveralls;
  - conda info --env;
  - conda list;

script:
  - coverage run --source mpl_animationmanager setup.py test
  
after_success:
  coveralls
  
